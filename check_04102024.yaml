- name: Install Helm, DockerCompose, ArgoCD on Master Node
  hosts: ['k8s_master'][0]
  gather_facts: true
  become: true  
  tasks:
  
  - name: Install Helm
    shell: curl -fsSL -o /root/get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    shell: chmod 700 /root/get_helm.sh
    shell: sh /root/get_helm.sh
  
  - name: Install DockerCompose Plugin 
    shell: sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

  - name: Restart Docker service
    systemd:
      name: docker
      state: restarted

  - name: Install argoCD
    shell: kubectl create namespace argocd
    shell: kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

  - name: Patch argocd-server service to change type to NodePort
      shell: >
        kubectl patch svc argocd-server -n argocd
        -p '{"spec": {"type": "NodePort"}}'
      register: patch_result

  - name: Display the result of the patch operation
      debug:
        msg: "{{ patch_result.stdout }}"

 - name: Run kubectl get all in the argocd namespace
      shell: kubectl get all -n argocd
      register: kubectl_output

  - name: Display kubectl output
      debug:
        msg: "{{ kubectl_output.stdout }}"

  - name: Get ArgoCD admin password using kubectl and decode it
    shell: >
      kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
      register: argocd_admin_password

  - name: Display ArgoCD admin password
    debug:
      msg: "ArgoCD admin password is: {{ argocd_admin_password.stdout }}"
    
    
